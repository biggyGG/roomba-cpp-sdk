.TH "roomba::state" 3 "Sun Feb 8 2015" "Version 1.0.0-alpha" "iRobot Roomba 500 Series SDK" \" -*- nroff -*-
.ad l
.nh
.SH NAME
roomba::state \- 
.PP
Constant data used to manage data returned from the iRobot® Roomba\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBsensor_data_t\fP"
.br
.RI "\fIData structure to overlay sensor blob\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBReturnCode\fP \fBgetParseError\fP (void)"
.br
.RI "\fIAccessor method to check for parsing errors\&. \fP"
.ti -1c
.RI "\fBReturnCode\fP \fBparseQueryData\fP (void)"
.br
.RI "\fIFunction to receive serial data generated by a query command\&. \fP"
.ti -1c
.RI "\fBReturnCode\fP \fBparseStreamData\fP (void)"
.br
.RI "\fIFunction to receive serial data generated by the stream command\&. \fP"
.ti -1c
.RI "\fBReturnCode\fP \fBsetBaudCode\fP (const \fBBaudCode\fP baud_code_)"
.br
.RI "\fIStores the baud code\&. \fP"
.ti -1c
.RI "\fBReturnCode\fP \fBsetOIMode\fP (const \fBOIMode\fP oi_mode_)"
.br
.RI "\fIStores the operating mode of the Open Interface\&. \fP"
.ti -1c
.RI "\fBReturnCode\fP \fBsetParseKey\fP (sensor::PacketId const *const parse_key_)"
.br
.RI "\fIFunction to store parse key\&. \fP"
.ti -1c
.RI "struct \fBroomba::state::sensor_data_t\fP \fB__attribute__\fP ((__packed__))"
.br
.in -1c
.SH "Detailed Description"
.PP 
Constant data used to manage data returned from the iRobot® Roomba\&. 

The state of the iRobot Roomba\&.
.PP
Internal helper functions\&.
.PP
This constant data facilitates inserting and retreiving sensor data from the blob\&. Some 'data' is represented 'functionally' to reduce wasted space for sparse data sets\&. The data functions do not contain error checking, and should only be used internally\&.
.PP
Functions used for common calculations\&. These functions do not supply return codes and are considered to be unsafe\&.
.PP
This namespace provides access to a state machine prescribed by the iRobot Roomba Open Interface specification\&. The namespace stores tracking information when calls are made to set device properties (i\&.e\&. baud code), it also houses the data returned when the state of the sensors are queried\&. see \fBOpenInterface::baud\fP see \fBOpenInterface::control\fP see \fBOpenInterface::full\fP see \fBOpenInterface::power\fP see \fBOpenInterface::queryList\fP see \fBOpenInterface::safe\fP see \fBOpenInterface::sensors\fP see \fBOpenInterface::start\fP see \fBOpenInterface::stream\fP 
.SH "Function Documentation"
.PP 
.SS "\fBReturnCode\fP roomba::state::getParseError (void)"

.PP
Accessor method to check for parsing errors\&. The parsing methods typically execute in a separate thread and is therefore unable to provide return codes directly\&. This method provides access to the shared memory where the return code is stored\&. 
.PP
\fBReturns:\fP
.RS 4
SUCCESS 
.PP
SERIAL_TRANSFER_FAILURE 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBstate::parseQueryData\fP 
.PP
\fBstate::parseStreamData\fP 
.RE
.PP

.SS "\fBReturnCode\fP roomba::state::parseQueryData (void)"

.PP
Function to receive serial data generated by a query command\&. Parses data received from Roomba and stores it in memory accessible by the OICommand object\&. 
.PP
\fBReturns:\fP
.RS 4
SUCCESS 
.PP
SERIAL_TRANSFER_FAILURE 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBOpenInterface::sensors\fP 
.PP
\fBOpenInterface::queryList\fP 
.RE
.PP

.SS "\fBReturnCode\fP roomba::state::parseStreamData (void)"

.PP
Function to receive serial data generated by the stream command\&. Parses data received from Roomba and stores it in memory accessible by the OICommand object\&. 
.PP
\fBReturns:\fP
.RS 4
SUCCESS 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBOpenInterface::stream\fP 
.RE
.PP

.SS "\fBReturnCode\fP roomba::state::setBaudCode (const BaudCodebaud_code_)"

.PP
Stores the baud code\&. The baud code is used when calculating the time required to execute a sensor query transaction\&. 
.PP
\fBReturns:\fP
.RS 4
SUCCESS 
.PP
INVALID_PARAMETER 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBOpenInterface::sensors\fP 
.PP
\fBOpenInterface::queryList\fP 
.RE
.PP

.SS "\fBReturnCode\fP roomba::state::setOIMode (const OIModeoi_mode_)"

.PP
Stores the operating mode of the Open Interface\&. The variable is used to track the current operating mode of the Roomba's internal state machine (i\&.e\&. Off, Passive, Safe, Full), and is used as a gate to control available functionality\&. 
.PP
\fBReturns:\fP
.RS 4
SUCCESS 
.PP
INVALID_PARAMETER see \fBOpenInterface::control\fP see \fBOpenInterface::full\fP see \fBOpenInterface::power\fP see \fBOpenInterface::safe\fP see \fBOpenInterface::start\fP 
.RE
.PP

.SS "\fBReturnCode\fP roomba::state::setParseKey (sensor::PacketId const *constparse_key_)"

.PP
Function to store parse key\&. A parsing key is generated during the call to queryList() or sensors() to describe the format of the data returned by the iRobot® Roomba\&. 
.PP
\fBParameters:\fP
.RS 4
\fIparse_key_\fP An array of bytes describing the data requested from the iRobot® Roomba\&. 
.br
 Index 0 contains the length of the array\&. 
.br
 The remaining values are the packet ids of the data requested from the iRobot® Roomba\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
SUCCESS 
.PP
INVALID_PARAMETER 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBOpenInterface::sensors\fP 
.PP
\fBOpenInterface::queryList\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for iRobot Roomba 500 Series SDK from the source code\&.
